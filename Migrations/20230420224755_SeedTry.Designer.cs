// <auto-generated />
using System;
using LabSchool.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LabSchool.Migrations
{
    [DbContext(typeof(LabSchoolContext))]
    [Migration("20230420224755_SeedTry")]
    partial class SeedTry
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LabSchool.Models.Aluno", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codigo"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DataDeNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<float>("Nota")
                        .HasColumnType("real");

                    b.Property<int>("QtdAtendimento")
                        .HasColumnType("int");

                    b.Property<string>("Situacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("varchar(20)");

                    b.HasKey("Codigo");

                    b.HasIndex("CPF")
                        .IsUnique();

                    b.ToTable("Aluno", (string)null);

                    b.HasData(
                        new
                        {
                            Codigo = 1,
                            CPF = "01234567890",
                            DataDeNascimento = new DateTime(1979, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Bart Simpson",
                            Nota = 3.5f,
                            QtdAtendimento = 0,
                            Situacao = "Irregular",
                            Telefone = "11-11111-1212"
                        },
                        new
                        {
                            Codigo = 2,
                            CPF = "01234566844",
                            DataDeNascimento = new DateTime(1981, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Lisa Simpson",
                            Nota = 10f,
                            QtdAtendimento = 0,
                            Situacao = "Ativo",
                            Telefone = "11-2222-1212"
                        },
                        new
                        {
                            Codigo = 3,
                            CPF = "01268785409",
                            DataDeNascimento = new DateTime(1965, 8, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Marge Simpson",
                            Nota = 9f,
                            QtdAtendimento = 0,
                            Situacao = "Ativo",
                            Telefone = "12-7658-1292"
                        },
                        new
                        {
                            Codigo = 4,
                            CPF = "01268788888",
                            DataDeNascimento = new DateTime(1981, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Milhouse Van Houten",
                            Nota = 8f,
                            QtdAtendimento = 0,
                            Situacao = "Ativo",
                            Telefone = "12-7658-4444"
                        },
                        new
                        {
                            Codigo = 5,
                            CPF = "04444485409",
                            DataDeNascimento = new DateTime(1975, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Nelson Muntz",
                            Nota = 2f,
                            QtdAtendimento = 0,
                            Situacao = "Inativo",
                            Telefone = "14-7777-1292"
                        });
                });

            modelBuilder.Entity("LabSchool.Models.Pedagogo", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codigo"));

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataDeNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QtdAtendimento")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Codigo");

                    b.ToTable("Pedagogo", (string)null);

                    b.HasData(
                        new
                        {
                            Codigo = 1,
                            CPF = "4053901190",
                            DataDeNascimento = new DateTime(2000, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "John Snow",
                            QtdAtendimento = 0,
                            Telefone = "11-67333-4454"
                        },
                        new
                        {
                            Codigo = 2,
                            CPF = "767659875965",
                            DataDeNascimento = new DateTime(1981, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Sansa Stark",
                            QtdAtendimento = 0,
                            Telefone = "22-22333-3454"
                        },
                        new
                        {
                            Codigo = 3,
                            CPF = "09678646347",
                            DataDeNascimento = new DateTime(2001, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Tyrion Lannister",
                            QtdAtendimento = 0,
                            Telefone = "33-77333-3454"
                        },
                        new
                        {
                            Codigo = 4,
                            CPF = "76768887905",
                            DataDeNascimento = new DateTime(2002, 12, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Sandor Clegane",
                            QtdAtendimento = 0,
                            Telefone = "44-22433-3004"
                        });
                });

            modelBuilder.Entity("LabSchool.Models.Professor", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codigo"));

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataDeNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Experiencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormacaoAcademica")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Codigo");

                    b.ToTable("Professor", (string)null);

                    b.HasData(
                        new
                        {
                            Codigo = 1,
                            CPF = "4053901190",
                            DataDeNascimento = new DateTime(1982, 10, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Estado = "Ativo",
                            Experiencia = "FullStack",
                            FormacaoAcademica = "Mestrado",
                            Nome = "Walter White",
                            Telefone = "11-11111-1212"
                        },
                        new
                        {
                            Codigo = 2,
                            CPF = "4053909990",
                            DataDeNascimento = new DateTime(1997, 10, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Estado = "Ativo",
                            Experiencia = "BackEnd",
                            FormacaoAcademica = "Graduação Incompleta",
                            Nome = "Jesse Pinkman",
                            Telefone = "44-12311-1212"
                        },
                        new
                        {
                            Codigo = 3,
                            CPF = "8883901190",
                            DataDeNascimento = new DateTime(1984, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Estado = "Ativo",
                            Experiencia = "FullStack",
                            FormacaoAcademica = "Mestrado",
                            Nome = "Hank Schrader",
                            Telefone = "11-99999-1212"
                        },
                        new
                        {
                            Codigo = 4,
                            CPF = "4012301190",
                            DataDeNascimento = new DateTime(1980, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Estado = "Inativo",
                            Experiencia = "FullStack",
                            FormacaoAcademica = "Doutorado",
                            Nome = "Gustavo Fring",
                            Telefone = "11-11111-8888"
                        },
                        new
                        {
                            Codigo = 5,
                            CPF = "4053909990",
                            DataDeNascimento = new DateTime(1988, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Estado = "Ativo",
                            Experiencia = "FullStack",
                            FormacaoAcademica = "Mestrado",
                            Nome = "Saul Goodman",
                            Telefone = "44-19999-1212"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
